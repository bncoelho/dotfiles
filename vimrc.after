syntax enable
set background=dark
colorscheme solarized

let g:solarized_termtrans = 1
let g:solarized_termcolors = 16

set nocompatible
set t_Co=16

let g:Powerline_symbols = 'fancy'
let g:Powerline_theme ='default'
let g:Powerline_colorscheme = 'solarized16'
set guifont=Monaco-Powerline
set encoding=utf-8

let mapleader = ","

"highlight OverLength ctermbg=red ctermfg=white guibg=#592929"
"match OverLength /\%100v.\+/"

" Highlight long lines {{{
function HighlightLongLines()
  let w:highlight_long_lines
        \ = exists('w:highlight_long_lines') ?
        \ ! w:highlight_long_lines : 1
  if w:highlight_long_lines
    let w:m1=matchadd('Search', '\%<97v.\%>93v', -1)
    let w:m2=matchadd('ErrorMsg', '\%>96v.\+', -1)
  else
    call matchdelete(w:m1)
    call matchdelete(w:m2)
  endif
endfunction
" Enable it by default in all windows
"au BufWinEnter * call HighlightLongLines()
" Map it to <F3>
nnoremap <silent> <F3> :call HighlightLongLines()<CR>
"}}}

" Map Ctrl+Shift+f to :Ack Command 
nnoremap <C-F> :Ack 

set tags+=gems.tags
set tags+=./tags
map º [
map ´ ]


let g:ctrlp_extensions = ['tag']

nnoremap <silent>π :CtrlPTag<CR> 
set autoread



